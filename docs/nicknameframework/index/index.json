{"interfaceLanguages":{"occ":[{"children":[{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknameversionnumber","title":"NicknameVersionNumber","type":"var"},{"path":"\/documentation\/nicknameframework\/nicknameversionstring","title":"NicknameVersionString","type":"var"}],"path":"\/documentation\/nicknameframework","title":"NicknameFramework","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nickname\/init(communicator:accesstoken:tracestate:localexpiration:)","title":"init(communicator: Communicator, accessToken: String, traceState: String, localExpiration: Date)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nickname\/initialize()","title":"func initialize() async -> Swift.Result<NicknameValidation, NicknameWidgetError>","type":"method"}],"path":"\/documentation\/nicknameframework\/nickname","title":"Nickname","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknameformat\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknameformat\/charset","title":"let charset: String?","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknameformat\/lengthmax","title":"let lengthMax: Int?","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknameformat\/lengthmin","title":"let lengthMin: Int?","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknameformat\/muc","title":"let muc: String","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknameformat\/regexexcept","title":"let regexExcept: String?","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknameformat\/regexmatches","title":"let regexMatches: String?","type":"property"}],"path":"\/documentation\/nicknameframework\/nicknameformat","title":"NicknameFormat","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamevalidation\/initresponsedataobject","title":"let initResponseDataObject: InitResponseDataObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamevalidation\/cancel()","title":"func cancel() async -> Swift.Result<Void, NicknameWidgetError>","type":"method"},{"path":"\/documentation\/nicknameframework\/nicknamevalidation\/validate(nickname:)","title":"func validate(nickname: String) -> Swift.Result<NicknameVerification, NicknameValidationError>","type":"method"},{"path":"\/documentation\/nicknameframework\/nicknamevalidation\/validate(nickname:muc:)","title":"func validate(nickname: String, muc: String) -> Swift.Result<NicknameVerification, NicknameValidationError>","type":"method"}],"path":"\/documentation\/nicknameframework\/nicknamevalidation","title":"NicknameValidation","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamevalidationresult\/charsetvalid","title":"let charsetValid: Bool","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknamevalidationresult\/lengthmaxvalid","title":"let lengthMaxValid: Bool","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknamevalidationresult\/lengthminvalid","title":"let lengthMinValid: Bool","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknamevalidationresult\/regexexceptvalid","title":"let regexExceptValid: Bool","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknamevalidationresult\/regexmatchesvalid","title":"let regexMatchesValid: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamevalidationresult\/isvalid()","title":"func isValid() -> Bool","type":"method"}],"path":"\/documentation\/nicknameframework\/nicknamevalidationresult","title":"NicknameValidationResult","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/initresponsedataobject\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/initresponsedataobject\/nicknamedeterminants","title":"let nicknameDeterminants: [NicknameDeterminant]","type":"property"},{"path":"\/documentation\/nicknameframework\/initresponsedataobject\/nicknameformats","title":"let nicknameFormats: [NicknameFormat]","type":"property"}],"path":"\/documentation\/nicknameframework\/initresponsedataobject","title":"InitResponseDataObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamedeterminant\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamedeterminant\/muc","title":"let muc: String","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknamedeterminant\/regexexcept","title":"let regexExcept: String?","type":"property"},{"path":"\/documentation\/nicknameframework\/nicknamedeterminant\/regexmatches","title":"let regexMatches: String?","type":"property"}],"path":"\/documentation\/nicknameframework\/nicknamedeterminant","title":"NicknameDeterminant","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamevalidationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nicknameframework\/nicknamevalidationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nicknameframework\/nicknamevalidationerror","title":"NicknameValidationError","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknameverification\/cancel()","title":"func cancel() async -> Swift.Result<Void, NicknameWidgetError>","type":"method"},{"path":"\/documentation\/nicknameframework\/nicknameverification\/verify()","title":"func verify() async -> Swift.Result<Void, NicknameWidgetError>","type":"method"}],"path":"\/documentation\/nicknameframework\/nicknameverification","title":"NicknameVerification","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamewidgeterror\/expired","title":"case expired","type":"case"},{"path":"\/documentation\/nicknameframework\/nicknamewidgeterror\/monetjsendnetworkcontrolerror(error:)","title":"case monetJSendNetworkControlError(error: MonetJSendNetworkControlError)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamewidgeterror\/init(error:)","title":"init(error: MonetJSendNetworkControlError)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamewidgeterror\/expiredcase","title":"static var expiredCase: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nicknameframework\/nicknamewidgeterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nicknameframework\/nicknamewidgeterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nicknameframework\/nicknamewidgeterror","title":"NicknameWidgetError","type":"enum"}],"path":"\/documentation\/nicknameframework","title":"NicknameFramework","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}